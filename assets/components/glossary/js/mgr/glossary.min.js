/*!
 * Glossary - Maintain a Glossary
 * Version: 2.4.3
 * Build date: 2020-11-17
 */

var glossary=function(e){e=e||{},glossary.superclass.constructor.call(this,e)};Ext.extend(glossary,Ext.Component,{page:{},window:{},grid:{},tree:{},panel:{},combo:{},config:{}}),Ext.reg("glossary",glossary),Glossary=new glossary,Glossary.panel.Home=function(e){e=e||{},Ext.applyIf(e,{cls:"container home-panel"+(Glossary.config.debug?" debug":""),defaults:{collapsible:!1,autoHeight:!0},items:[{html:"<h2>"+_("glossary.management")+"</h2>"+(Glossary.config.debug?'<div class="ribbon top-right"><span>'+_("glossary.debug_mode")+"</span></div>":""),border:!1,cls:"modx-page-header"},{defaults:{autoHeight:!0},border:!0,items:[{xtype:"glossary-panel-overview"}]},{cls:"treehillstudio_about",html:'<img width="146" height="40" src="'+Glossary.config.assetsUrl+'img/mgr/treehill-studio-small.png" srcset="'+Glossary.config.assetsUrl+'img/mgr/treehill-studio-small@2x.png 2x" alt="Treehill Studio">',listeners:{afterrender:function(e){e.getEl().select("img").on("click",function(){var e='<span style="display: inline-block; text-align: center"><img src="'+Glossary.config.assetsUrl+'img/mgr/treehill-studio.png" srcset="'+Glossary.config.assetsUrl+'img/mgr/treehill-studio@2x.png 2x" alt="Treehill Studio"><br>© 2018-2020 by <a href="https://treehillstudio.com" target="_blank">treehillstudio.com</a></span>';Ext.Msg.show({title:_("glossary")+" "+Glossary.config.version,msg:e,buttons:Ext.Msg.OK,cls:"treehillstudio_window",width:330})})}}}]}),Glossary.panel.Home.superclass.constructor.call(this,e)},Ext.extend(Glossary.panel.Home,MODx.Panel),Ext.reg("glossary-panel-home",Glossary.panel.Home),Glossary.panel.HomeTab=function(e){e=e||{},Ext.applyIf(e,{id:"glossary-panel-"+e.tabtype,title:_("glossary."+e.tabtype),items:[{html:"<p>"+_("glossary."+e.tabtype+"_desc")+"</p>",border:!1,cls:"panel-desc"},{layout:"form",cls:"x-form-label-left main-wrapper",defaults:{autoHeight:!0},border:!0,items:[{id:"glossary-panel-"+e.tabtype+"-grid",xtype:"glossary-grid-"+e.tabtype,preventRender:!0}]}]}),Glossary.panel.HomeTab.superclass.constructor.call(this,e)},Ext.extend(Glossary.panel.HomeTab,MODx.Panel),Ext.reg("glossary-panel-hometab",Glossary.panel.HomeTab),Glossary.panel.Overview=function(e){e=e||{},this.ident="glossary-panel-overview"+Ext.id(),this.panelOverviewTabs=[{xtype:"glossary-panel-hometab",tabtype:"terms"}],Glossary.config.is_admin&&this.panelOverviewTabs.push({xtype:"glossary-panel-settings",tabtype:"settings"}),Ext.applyIf(e,{id:this.ident,items:[{xtype:"modx-tabs",stateful:!0,stateId:"glossary-panel-overview",stateEvents:["tabchange"],getState:function(){return{activeTab:this.items.indexOf(this.getActiveTab())}},autoScroll:!0,deferredRender:!1,forceLayout:!0,defaults:{layout:"form",autoHeight:!0,hideMode:"offsets"},items:this.panelOverviewTabs,listeners:{tabchange:function(e,t){"settings"===t.tabtype?Ext.getCmp("glossary-grid-system-settings").getStore().reload():"glossary-panel-hometab"===t.xtype&&Ext.getCmp("glossary-panel-"+t.tabtype+"-grid")&&Ext.getCmp("glossary-panel-"+t.tabtype+"-grid").getStore().reload()}}}]}),Glossary.panel.Overview.superclass.constructor.call(this,e)},Ext.extend(Glossary.panel.Overview,MODx.Panel),Ext.reg("glossary-panel-overview",Glossary.panel.Overview),Glossary.grid.Terms=function(e){e=e||{},this.buttonColumnTpl=new Ext.XTemplate('<tpl for="."><tpl if="action_buttons !== null"><ul class="action-buttons"><tpl for="action_buttons"><li><i class="icon {className} icon-{icon}" title="{text}"></i></li></tpl></ul></tpl></tpl>',{compiled:!0}),this.ident="glossary-terms"+Ext.id(),Ext.applyIf(e,{id:this.ident+"-glossary-grid-terms",url:Glossary.config.connectorUrl,baseParams:{action:"mgr/term/getlist"},autosave:!0,save_action:"mgr/term/updateFromGrid",fields:["id","term","explanation"],autoHeight:!0,paging:!0,remoteSort:!0,autoExpandColumn:"explanation",columns:[{header:_("glossary.term_term"),dataIndex:"term",sortable:!0,width:30,editor:{xtype:"textfield"}},{header:_("glossary.term_explanation"),dataIndex:"explanation",sortable:!0,width:100,editor:(void 0===MODx.loadRTE||!Glossary.config.html)&&{xtype:"textfield"}},{renderer:{fn:this.buttonColumnRenderer,scope:this},width:30}],tbar:[{text:_("glossary.term_create"),cls:"primary-button",handler:this.createTerm},"->",{xtype:"textfield",id:this.ident+"-glossary-filter-search",emptyText:_("search")+"…",submitValue:!1,listeners:{change:{fn:this.search,scope:this},render:{fn:function(e){new Ext.KeyMap(e.getEl(),{key:Ext.EventObject.ENTER,fn:function(){return this.fireEvent("change",this),this.blur(),!0},scope:e})},scope:this}}},{xtype:"button",id:this.ident+"-glossary-filter-clear",cls:"x-form-filter-clear",text:_("filter_clear"),listeners:{click:{fn:this.clearFilter,scope:this}}}]}),Glossary.grid.Terms.superclass.constructor.call(this,e)},Ext.extend(Glossary.grid.Terms,MODx.grid.Grid,{windows:{},getMenu:function(){var e=[];e.push({text:_("glossary.term_update"),handler:this.updateTerm}),e.push("-"),e.push({text:_("glossary.term_remove"),handler:this.removeTerm}),this.addContextMenuItem(e)},createTerm:function(e,t){this.createUpdateTerm(e,t,!1)},updateTerm:function(e,t){this.createUpdateTerm(e,t,!0)},createUpdateTerm:function(e,t,s){var r;if(s){if(!this.menu.record||!this.menu.record.id)return!1;r=this.menu.record}else r={};var a=MODx.load({xtype:"glossary-window-term-create-update",isUpdate:s,title:s?_("glossary.term_update_long"):_("glossary.term_create_long"),record:r,listeners:{success:{fn:this.refresh,scope:this},afterRender:{fn:function(e){this.initTinyMCE(e)},scope:a}}});a.fp.getForm().setValues(r),a.show(t.target)},removeTerm:function(){if(!this.menu.record)return!1;MODx.msg.confirm({title:_("glossary.term_remove"),text:_("glossary.term_remove_confirm"),url:this.config.url,params:{action:"mgr/term/remove",id:this.menu.record.id},listeners:{success:{fn:this.refresh,scope:this}}})},search:function(e){this.getStore().baseParams.query=e.getValue(),this.getBottomToolbar().changePage(1),this.refresh()},clearFilter:function(){this.getStore().baseParams.query="",Ext.getCmp(this.ident+"-glossary-filter-search").reset(),this.getBottomToolbar().changePage(1),this.refresh()},buttonColumnRenderer:function(){var e={action_buttons:[{className:"update",icon:"pencil-square-o",text:_("glossary.term_update")},{className:"remove",icon:"trash-o",text:_("glossary.term_remove")}]};return this.buttonColumnTpl.apply(e)},onClick:function(e){var t=e.getTarget();if("icon"===t.className.split(" ")[0]){var s=t.className.split(" ")[1],r=this.getSelectionModel().getSelected();switch(this.menu.record=r.data,s){case"remove":this.removeTerm(r,e);break;case"update":this.updateTerm(r,e)}}}}),Ext.reg("glossary-grid-terms",Glossary.grid.Terms),Glossary.window.CreateUpdateTerm=function(e){e=e||{},this.ident=e.ident||"cuterm"+Ext.id(),Ext.applyIf(e,{id:this.ident,url:Glossary.config.connectorUrl,action:e.isUpdate?"mgr/term/update":"mgr/term/create",width:700,autoHeight:!0,closeAction:"close",cls:"modx-window glossary-window",fields:[{xtype:"textfield",fieldLabel:_("glossary.term_term"),name:"term",anchor:"100%"},{xtype:"textarea",id:this.ident+"-glossary-explanation",fieldLabel:_("glossary.term_explanation"),name:"explanation",anchor:"100%"},{xtype:"hidden",name:"id"}]}),Glossary.window.CreateUpdateTerm.superclass.constructor.call(this,e)},Ext.extend(Glossary.window.CreateUpdateTerm,MODx.Window,{initTinyMCE:function(e){void 0!==MODx.loadRTE&&Glossary.config.html&&MODx.loadRTE(e.ident+"-glossary-explanation")}}),Ext.reg("glossary-window-term-create-update",Glossary.window.CreateUpdateTerm),Glossary.panel.Settings=function(e){e=e||{},Ext.applyIf(e,{id:"glossary-panel-settings",title:_("glossary.settings"),items:[{html:"<p>"+_("glossary.settings_desc")+"</p>",border:!1,cls:"panel-desc"},{xtype:"glossary-grid-system-settings",id:"glossary-grid-system-settings",cls:"main-wrapper",preventSaveRefresh:!0}]}),Glossary.panel.Settings.superclass.constructor.call(this,e)},Ext.extend(Glossary.panel.Settings,MODx.Panel),Ext.reg("glossary-panel-settings",Glossary.panel.Settings),Glossary.grid.SystemSettings=function(e){(e=e||{}).baseParams={action:"system/settings/getList",namespace:"glossary",area:MODx.request.area},Glossary.grid.SystemSettings.superclass.constructor.call(this,e)},Ext.extend(Glossary.grid.SystemSettings,MODx.grid.SettingsGrid,{_showMenu:function(e,t,s){s.stopEvent(),s.preventDefault(),this.menu.record=this.getStore().getAt(t).data,this.getSelectionModel().isSelected(t)||this.getSelectionModel().selectRow(t),this.menu.removeAll();var r=[];this.menu.record.menu?r=this.menu.record.menu:r.push({text:_("setting_update"),handler:this.updateSetting}),0<r.length&&(this.addContextMenuItem(r),this.menu.showAt(s.xy))},updateSetting:function(e,t){var s=this.menu.record;s.fk=Ext.isDefined(this.config.fk)?this.config.fk:0;var r=MODx.load({xtype:"modx-window-setting-update",url:Glossary.config.connectorUrl,action:"mgr/settings/update",record:s,grid:this,listeners:{success:{fn:function(){this.refresh()},scope:this}}});r.reset(),r.setValues(s),r.show(t.target)},clearFilter:function(){var e="glossary",t=MODx.request.area?MODx.request.area:"";this.getStore().baseParams=this.initialConfig.baseParams;var s=Ext.getCmp("modx-filter-area");s&&(s.store.baseParams.namespace=e,s.store.load(),s.reset()),Ext.getCmp("modx-filter-namespace").setValue(e),Ext.getCmp("modx-filter-key").reset(),this.getStore().baseParams.namespace=e,this.getStore().baseParams.area=t,this.getStore().baseParams.key="",this.getBottomToolbar().changePage(1)},filterByKey:function(e,t,s){return this.getStore().baseParams.key=t,this.getStore().baseParams.namespace="glossary",this.getBottomToolbar().changePage(1),!0},filterByNamespace:function(e,t,s){this.getStore().baseParams.namespace="glossary",this.getStore().baseParams.area="",this.getBottomToolbar().changePage(1);var r=Ext.getCmp("modx-filter-area");if(r){var a=r.store;a.baseParams.namespace="glossary",a.removeAll(),a.load(),r.setValue("")}},listeners:{afterrender:function(){this.topToolbar.items.items[0].hide(),this.topToolbar.items.items[2].hide()}}}),Ext.reg("glossary-grid-system-settings",Glossary.grid.SystemSettings),Glossary.page.Home=function(e){e=e||{},Ext.applyIf(e,{components:[{xtype:"glossary-panel-home",renderTo:"glossary-panel-home"}]}),Glossary.page.Home.superclass.constructor.call(this,e)},Ext.extend(Glossary.page.Home,MODx.Component),Ext.reg("glossary-page-home",Glossary.page.Home);